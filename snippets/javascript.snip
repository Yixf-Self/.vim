snippet fn
abbr function
options word
    function(${1:attribute}) {
      ${3:TARGET}
    }${2:, ${0\}}

snippet fnr
abbr function() .. return
options word
    function(${1:attribute}) {
      return ${3:TARGET};
    }${2:, ${0\}}

snippet     f
abbr        function(){proc;}
options     word
    function(${1:attribute}){${2:proc};}${0}

snippet     fr
abbr        function(){return val;}
options     word
    function(${1:attribute}){return ${2:val};}${0}

snippet it
    it("${1:explanation}", function() {
      ${2:// body}
    });

snippet afterEach
    afterEach(function() {
      ${1:// body}
    });

snippet beforeEach
    beforeEach(function() {
      ${1:// body}
    });

snippet describe
    describe("${1:description}", function() {

      ${2:// body}
    });

snippet expect
    expect(${1:expectation}).${2:toEqual(${0})}

snippet BackboneModel
    Backbone.Model.extend({
      ${1:// body}
    });

snippet BackboneCollection
    Backbone.Collection.extend({
      model: ${1:model},
      ${0}
    });

snippet BackboneView
    Backbone.View.extend({
      ${0}
    });

snippet BackboneRouter
    Backbone.Router.extend({
      ${0}
    });

snippet bbf
    ${1:attribute}: function(${2:arguments}) {
      ${3:// body}
    }

snippet hash
    ${1:key}: ${2:value}

snippet _each
    _.each(${1:list}, function(${2:iter}) {
      ${4:// body}
    }${3:, this});

snippet console
    console.log(${0:TARGET});

snippet     ExtDefine
abbr        Ext.define
options     head
    Ext.define('${1:classname}', {
      extend: '${2:Ext.Container}',

      ${3:config: \{${0\}\}}
    });
